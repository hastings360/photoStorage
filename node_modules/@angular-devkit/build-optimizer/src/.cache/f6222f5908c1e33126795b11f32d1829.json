{"remainingRequest":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/rxjs/_esm2015/util/Set.js","dependencies":[{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/rxjs/_esm2015/util/Set.js","mtime":1531331967000},{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/cache-loader/dist/cjs.js","mtime":1531332486000},{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { root } from './root';\nexport function minimalSetImpl() {\n    // THIS IS NOT a full impl of Set, this is just the minimum\n    // bits of functionality we need for this library.\n    return class MinimalSet {\n        constructor() {\n            this._values = [];\n        }\n        add(value) {\n            if (!this.has(value)) {\n                this._values.push(value);\n            }\n        }\n        has(value) {\n            return this._values.indexOf(value) !== -1;\n        }\n        get size() {\n            return this._values.length;\n        }\n        clear() {\n            this._values.length = 0;\n        }\n    }\n    ;\n}\nexport const Set = root.Set || minimalSetImpl();\n//# sourceMappingURL=Set.js.map",null]}