{"remainingRequest":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/rxjs/_esm2015/observable/IfObservable.js","dependencies":[{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/rxjs/_esm2015/observable/IfObservable.js","mtime":1531331966000},{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/cache-loader/dist/cjs.js","mtime":1531332486000},{"path":"/Users/hastingsl/Documents/Web_Sites/photoStorage/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Observable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IfObservable extends Observable {\n    constructor(condition, thenSource, elseSource) {\n        super();\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n    }\n    static create(condition, thenSource, elseSource) {\n        return new IfObservable(condition, thenSource, elseSource);\n    }\n    /** @deprecated internal use only */ _subscribe(subscriber) {\n        const { condition, thenSource, elseSource } = this;\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\n    }\n}\nclass IfSubscriber extends OuterSubscriber {\n    constructor(destination, condition, thenSource, elseSource) {\n        super(destination);\n        this.condition = condition;\n        this.thenSource = thenSource;\n        this.elseSource = elseSource;\n        this.tryIf();\n    }\n    tryIf() {\n        const { condition, thenSource, elseSource } = this;\n        let result;\n        try {\n            result = condition();\n            const source = result ? thenSource : elseSource;\n            if (source) {\n                this.add(subscribeToResult(this, source));\n            }\n            else {\n                this._complete();\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n}\n//# sourceMappingURL=IfObservable.js.map",null]}